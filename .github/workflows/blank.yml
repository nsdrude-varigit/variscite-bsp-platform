# This is a basic workflow to help you get started with Actions

name: imx8mn-var-som

env:
  MACHINE: imx8mn-var-som
  BUILD_DIR: build_xwayland
  DISTRO: fslc-xwayland
  SETUP_SCRIPT: setup-environment

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the dunfell-actions branch
  push:
    branches: [ dunfell-actions ]
  pull_request:
    branches: [ dunfell-actions ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: repo init
        run: |
          mkdir ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
          cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
          repo init -u ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/ -b ${GITHUB_SHA}

      - name: repo sync
        run: |
          cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
          repo sync -j4

      - name: create build directory
        run: |
          cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
          EULA=1 MACHINE=${MACHINE} DISTRO=${DISTRO} source ./${SETUP_SCRIPT} ${BUILD_DIR}
          if [ -e /opt/yocto_downloads/ ]; then sed -i 's/DL_DIR ?= "${BSPDIR}\/downloads/DL_DIR = "\/opt\/yocto_downloads/g' conf/local.conf; fi

      - name: build core-image-minimal
        run: |
          cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
          MACHINE=${MACHINE} DISTRO=${DISTRO} source ./${SETUP_SCRIPT} ${BUILD_DIR}
          bitbake core-image-minimal

      # - name: build core-image-base
      #   run: |
      #     cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
      #     MACHINE=${MACHINE} DISTRO=${DISTRO} source ./${SETUP_SCRIPT} ${BUILD_DIR}
      #     bitbake core-image-base

      # - name: build fsl-image-gui
      #   run: |
      #     cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
      #     MACHINE=${MACHINE} DISTRO=${DISTRO} source ./${SETUP_SCRIPT} ${BUILD_DIR}
      #     bitbake fsl-image-gui

      # - name: build fsl-image-qt5
      #   run: |
      #     cd ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
      #     MACHINE=${MACHINE} DISTRO=${DISTRO} source ./${SETUP_SCRIPT} ${BUILD_DIR}
      #     bitbake fsl-image-qt5

      - name: cleanup
        run: rm -rf ${MACHINE}-${GITHUB_SHA}-${GITHUB_RUN_ID}
